<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 狗娃子的博客</title>
    <link>https://assllj.github.io/post/</link>
    <description>Recent content in Posts on 狗娃子的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 09 Aug 2019 12:58:19 +0800</lastBuildDate>
    
	<atom:link href="https://assllj.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>交换Esc和Caps_Lock</title>
      <link>https://assllj.github.io/post/%E4%BA%A4%E6%8D%A2esc%E5%92%8Ccaps_lock/</link>
      <pubDate>Fri, 09 Aug 2019 12:58:19 +0800</pubDate>
      
      <guid>https://assllj.github.io/post/%E4%BA%A4%E6%8D%A2esc%E5%92%8Ccaps_lock/</guid>
      <description>&lt;p&gt;不管是不是vim党，Esc的使用频率都远远高于Caps Lock键，但是Esc键太远，反而Caps Lock键占着非常棒的位置，这谁能忍？所以我们可以交换这两个键。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://assllj.github.io/post/test/</link>
      <pubDate>Mon, 05 Aug 2019 18:30:16 +0800</pubDate>
      
      <guid>https://assllj.github.io/post/test/</guid>
      <description>测试 测试 测试</description>
    </item>
    
    <item>
      <title>聊聊进制</title>
      <link>https://assllj.github.io/post/%E8%81%8A%E8%81%8A%E8%BF%9B%E5%88%B6/</link>
      <pubDate>Tue, 07 Aug 2018 00:51:54 +0800</pubDate>
      
      <guid>https://assllj.github.io/post/%E8%81%8A%E8%81%8A%E8%BF%9B%E5%88%B6/</guid>
      <description>进制的表示 首先我们来看看十进制，例如12345，这个数的大小是怎么计算的呢？很简单，我们都知道 12345 = 1×104 + 2×103 + 3×102 + 4×1</description>
    </item>
    
    <item>
      <title>&#39;%&#39;符号的含义</title>
      <link>https://assllj.github.io/post/%E7%AC%A6%E5%8F%B7%E7%9A%84%E5%90%AB%E4%B9%89/</link>
      <pubDate>Sat, 16 Jun 2018 22:23:54 +0800</pubDate>
      
      <guid>https://assllj.github.io/post/%E7%AC%A6%E5%8F%B7%E7%9A%84%E5%90%AB%E4%B9%89/</guid>
      <description>&lt;p&gt;&amp;rsquo;%&amp;lsquo;符号有两个含义&amp;ndash;取模运算（“Modulo Operation”）和取余运算（“Complementation ”）。两个概念有重叠的部分但又不完全一致。主要的区别在于对负整数进行除法运算时操作不同&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>